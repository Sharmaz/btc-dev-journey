"use strict";(self.webpackChunkbtc_dev_journey=self.webpackChunkbtc_dev_journey||[]).push([[9477],{95:(n,e,i)=>{i.d(e,{A:()=>t});const t=i.p+"assets/images/bitcoin_core_sync-90cb9f2e22341e11b378b11d28ece2f1.png"},3563:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"environment-setup/macos","title":"MacOS","description":"Bitcoin Core","source":"@site/docs/environment-setup/macos.md","sourceDirName":"environment-setup","slug":"/environment-setup/macos","permalink":"/btc-dev-journey/docs/environment-setup/macos","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"guideSidebar","previous":{"title":"Ubuntu","permalink":"/btc-dev-journey/docs/environment-setup/ubuntu"},"next":{"title":"Uninstalling","permalink":"/btc-dev-journey/docs/environment-setup/uninstall-setup"}}');var s=i(4848),o=i(8453);const c={sidebar_position:2},l="MacOS",r={},d=[{value:"Bitcoin Core",id:"bitcoin-core",level:2},{value:"Dependencies",id:"dependencies",level:3},{value:"Installing Bitcoin Core",id:"installing-bitcoin-core",level:3},{value:"Running Bitcoin for Development",id:"running-bitcoin-for-development",level:3},{value:"Installing Lightning",id:"installing-lightning",level:2}];function a(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"macos",children:"MacOS"})}),"\n",(0,s.jsx)(e.h2,{id:"bitcoin-core",children:"Bitcoin Core"}),"\n",(0,s.jsx)(e.h3,{id:"dependencies",children:"Dependencies"}),"\n",(0,s.jsxs)(e.p,{children:["Install dependencies ",(0,s.jsx)(e.code,{children:"Python 3.12.3"}),", ",(0,s.jsx)(e.code,{children:"Homebrew"})," and ",(0,s.jsx)(e.code,{children:"Xcode"}),"."]}),"\n",(0,s.jsx)(e.admonition,{type:"warning",children:(0,s.jsxs)(e.p,{children:["Python version above ",(0,s.jsx)(e.code,{children:"3.12.3"})," did not work for me. I got errors later with Lightning Network."]})}),"\n",(0,s.jsx)(e.p,{children:"Other dependencies:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'brew install autoconf automake libtool gnu-sed gettext libsodium protobuf\nexport PATH="/usr/local/opt:$PATH"\n'})}),"\n",(0,s.jsx)(e.p,{children:"Python dependencies:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"pip install --upgrade pip\npip install poetry\npip install --user pyln-client websockets\n"})}),"\n",(0,s.jsx)(e.p,{children:"If you don't have SQLite you need to install it:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'brew install sqlite\nexport LDFLAGS="-L/usr/local/opt/sqlite/lib"\nexport CPPFLAGS="-I/usr/local/opt/sqlite/include"\n'})}),"\n",(0,s.jsxs)(e.p,{children:["For Macs with ",(0,s.jsx)(e.code,{children:"Apple Silicon"})," we need to make sure that the library paths are correct when using ",(0,s.jsx)(e.code,{children:"homebrew"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"export CPATH=/opt/homebrew/include\nexport LIBRARY_PATH=/opt/homebrew/lib\n"})}),"\n",(0,s.jsx)(e.h3,{id:"installing-bitcoin-core",children:"Installing Bitcoin Core"}),"\n",(0,s.jsxs)(e.p,{children:["The easiest way to install ",(0,s.jsx)(e.code,{children:"Bitcoin Core"})," is downloading it from ",(0,s.jsx)(e.a,{href:"https://bitcoincore.org/en/download/",children:"bitcoincore.org"}),", decompressing it and dragging it to our applications folder."]}),"\n",(0,s.jsx)(e.admonition,{type:"info",children:(0,s.jsx)(e.p,{children:"There is also the option to compile Bitcoin Core from the source code."})}),"\n",(0,s.jsxs)(e.p,{children:["To be able to run it, besides opening it from applications we need to grant it permissions in ",(0,s.jsx)(e.code,{children:"System Settings"})," > ",(0,s.jsx)(e.code,{children:"Privacy & Security"}),". Scroll down and click the ",(0,s.jsx)(e.code,{children:"Open Anyway"})," button."]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"image",src:i(9120).A+"",width:"1394",height:"342"})}),"\n",(0,s.jsxs)(e.p,{children:["At the initial configuration we choose the default directory along with the option of ",(0,s.jsx)(e.code,{children:"1 GB"}),"."]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"image",src:i(9767).A+"",width:"1254",height:"850"})}),"\n",(0,s.jsx)(e.p,{children:"Bitcoin Core will synchronize and download the entire blockchain, and that will take a lot of time depending on your computer and internet connection."}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"image",src:i(95).A+"",width:"1568",height:"1018"})}),"\n",(0,s.jsx)(e.admonition,{type:"warning",children:(0,s.jsx)(e.p,{children:"Synchronizing the entire blockchain could take a lot of time or even days."})}),"\n",(0,s.jsx)(e.admonition,{type:"danger",children:(0,s.jsxs)(e.p,{children:["In this guide we will not synchronize the entire blockchain, we will use a ",(0,s.jsx)(e.code,{children:"Prune Node"}),", and we will use the ",(0,s.jsx)(e.code,{children:"regtest"})," network."]})}),"\n",(0,s.jsxs)(e.p,{children:["Open the Bitcoin Core app and we will go to the preferences of the application. In the ",(0,s.jsx)(e.code,{children:"main"})," tab we will open the configuration file of Bitcoin Core click the button that says ",(0,s.jsx)(e.code,{children:"Open Configuration File"})," and add the following:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",metastring:'title="bitcoin.conf"',children:"prune=550\nregtest=1\n\n[regtest]\nrcpport=18443\nrpcuser=foo\nrpcpassword=bar\n"})}),"\n",(0,s.jsx)(e.p,{children:"Restart the Bitcoin Core application and wait until it is synchronized."}),"\n",(0,s.jsx)(e.p,{children:"This will reduce the time of synchronization as well as the disk space we need."}),"\n",(0,s.jsx)(e.p,{children:"After synchronizing the blockchain, close the Bitcoin Core graphical application, we need to run bitcoin core in the terminal, so we need to install it from homebrew:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"brew install bitcoin\n"})}),"\n",(0,s.jsxs)(e.p,{children:["Homebrew will install ",(0,s.jsx)(e.code,{children:"bitcoind"})," and ",(0,s.jsx)(e.code,{children:"bitcoin-cli"}),"."]}),"\n",(0,s.jsx)(e.h3,{id:"running-bitcoin-for-development",children:"Running Bitcoin for Development"}),"\n",(0,s.jsx)(e.p,{children:"Open two terminal windows or tabs:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["In the first terminal we are going to run ",(0,s.jsx)(e.code,{children:"bitcoind"})," which will run the bitcoin node and synchronize the blockchain (if we haven't synchronized it before)."]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"bitcoind\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["In the second terminal we are going to run ",(0,s.jsx)(e.code,{children:"bitcoin-cli"})," which will show the info of the node."]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"bitcoin-cli getblockchaininfo\n"})}),"\n",(0,s.jsx)(e.p,{children:"If everything goes well we should see something like this:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-JSON",metastring:'title="getblockchaininfo output"',children:'{\n  "chain": "main",\n  "blocks": 1,\n  "headers": 1,\n  "bestblockhash": "0000000000000000000000000000000000000000000000000000000000000000",\n  "difficulty": 1,\n  "mediantime": 0,\n  "verificationprogress": 1,\n  "initialblockdownload": true,\n  "chainwork": "0000000000000000000000000000000000000000000000000000000000000000",\n  "size_on_disk": 0,\n  "pruned": true,\n  "pruneheight": 0,\n  "automatic_pruning": true,\n  "prune_target_size": 0,\n  "softforks": [],\n  "warnings": ""\n}\n'})}),"\n",(0,s.jsx)(e.admonition,{type:"info",children:(0,s.jsxs)(e.p,{children:["All requests made with ",(0,s.jsx)(e.code,{children:"bitcoin-cli"})," will be in JSON format."]})}),"\n",(0,s.jsx)(e.admonition,{type:"note",children:(0,s.jsxs)(e.p,{children:["If you are developing applications only for Bitcoin without touching the Lightning Network, you can skip the rest of this guide. And your next steps will be finishing synchronizing the blockchain with ",(0,s.jsx)(e.code,{children:"bitcoind"})," and then using ",(0,s.jsx)(e.code,{children:"bitcoin-cli"}),"."]})}),"\n",(0,s.jsx)(e.h2,{id:"installing-lightning",children:"Installing Lightning"}),"\n",(0,s.jsx)(e.p,{children:"Let's download the repository:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"git clone https://github.com/ElementsProject/lightning.git\ncd lightning\n"})}),"\n",(0,s.jsx)(e.p,{children:"Compile and install lightning:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"poetry install\n./configure\npoetry run make\n"})}),"\n",(0,s.jsxs)(e.p,{children:["We need to run ",(0,s.jsx)(e.code,{children:"bitcoind"}),", ",(0,s.jsx)(e.code,{children:"lightningd"})," and ",(0,s.jsx)(e.code,{children:"lightning-cli"})," in the background with the ",(0,s.jsx)(e.code,{children:"--regtest"})," flag:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"bitcoind &\n./lightningd/lightningd --regtest &\n./cli/lightning-cli --regtest help\n"})}),"\n",(0,s.jsx)(e.p,{children:"Run the testnet of lighning (in fact regtest, but I will explain it later in another guide):"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:". contrib/startup_regtest.sh\n"})}),"\n",(0,s.jsxs)(e.p,{children:["The command above is a script that will run ",(0,s.jsx)(e.code,{children:"bitcoind"}),", ",(0,s.jsx)(e.code,{children:"bitcion-cli"}),", ",(0,s.jsx)(e.code,{children:"lightningd"})," and ",(0,s.jsx)(e.code,{children:"lightning-cli"}),".\nAnd we get the following output with some basic commands."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",metastring:'title=". contrib/startup_regtest.sh output"',children:"Useful commands:\n  start_ln 3: start three nodes, l1, l2, l3\n  connect 1 2: connect l1 and l2\n  fund_nodes: connect all nodes with channels, in a row\n  stop_ln: shutdown\n  destroy_ln: remove ln directories\n"})}),"\n",(0,s.jsxs)(e.p,{children:["The command ",(0,s.jsx)(e.code,{children:"start_ln"})," will create a pair of nodes in the lightning network (l1 and l2)."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"start_ln\n"})}),"\n",(0,s.jsx)(e.p,{children:"Also we will get a list of commands to interact with each node:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",metastring:'title="start_ln output"',children:'Bitcoin Core starting\nawaiting bitcoind...\nLoading "default" bitcoind wallet.\n[1] 10459\n[2] 10463\nCommands:\n        l1-cli, l1-log,\n        l2-cli, l2-log,\n        bt-cli, stop_ln, fund_nodes\ntimed out parsing log /tmp/l1/log\n'})}),"\n",(0,s.jsx)(e.p,{children:"We will get the information of one of the nodes (l1)."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"l1-cli getinfo\n"})}),"\n",(0,s.jsx)(e.admonition,{type:"info",children:(0,s.jsx)(e.p,{children:"All requests made with lightning will be in JSON format."})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-JSON",metastring:'title="getinfo output"',children:'{\n   "id": "02d44e9a844e84ab76d412601c8e648ce039b8266874ddfe5b854fb6723096ea06",\n   "alias": "SLICKERROUTE-v24.11-91-g9e29bde",\n   "color": "02d44e",\n   "num_peers": 0,\n   "num_pending_channels": 0,\n   "num_active_channels": 0,\n   "num_inactive_channels": 0,\n   "address": [],\n   "binding": [\n      {\n         "type": "ipv4",\n         "address": "127.0.0.1",\n         "port": 7171\n      }\n   ],\n   "version": "v24.11-91-g9e29bde",\n   "blockheight": 109,\n   "network": "regtest",\n   "fees_collected_msat": 0,\n   "lightning-dir": "/tmp/l1/regtest",\n   "our_features": {\n      "init": "8008a0882a8a59a1",\n      "node": "8088a0882a8a59a1",\n      "channel": "",\n      "invoice": "02000002024100"\n   }\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:"Now we are going to add some funds (a few satoshis) to the nodes:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"fund_nodes\n"})}),"\n",(0,s.jsx)(e.p,{children:"Awesome!!"}),"\n",(0,s.jsxs)(e.p,{children:["We get the funds of the node ",(0,s.jsx)(e.code,{children:"l1"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"l1-cli listfunds\n"})}),"\n",(0,s.jsxs)(e.p,{children:["The ",(0,s.jsx)(e.code,{children:"amount_msat"})," property is the amount in satoshis."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-JSON",metastring:'title="listfunds output"',children:'{\n   "outputs": [\n      {\n         "txid": "3383b42043c96d072f1a22f11ea1e4039bb93176f13d397178a6eb13cb7113e2",\n         "output": 1,\n         "amount_msat": 98999834000,\n         "scriptpubkey": "51200e98fba542bc6fda8cb83ae930cebd6f6957f3cb5d2eb49e47a6d0f612473efa",\n         "address": "bcrt1pp6v0hf2zh3ha4r9c8t5npn4ada540u7tt5htf8j85mg0vyj88maq9zy237",\n         "status": "confirmed",\n         "blockheight": 111,\n         "reserved": false\n      }\n   ],\n   "channels": [\n      {\n         "peer_id": "02fed4dea6a6bc7dcc8d7bb4c88aa452fc4cd3878949851b4c0c23e71eebfc751f",\n         "connected": true,\n         "state": "CHANNELD_NORMAL",\n         "channel_id": "8274abbaeb547055d57f07337965eadea778c7e0344dd6d1b55257746cd85288",\n         "short_channel_id": "111x1x0",\n         "our_amount_msat": 1000000000,\n         "amount_msat": 1100000000,\n         "funding_txid": "3383b42043c96d072f1a22f11ea1e4039bb93176f13d397178a6eb13cb7113e2",\n         "funding_output": 0\n      }\n   ]\n}\n'})}),"\n",(0,s.jsx)(e.admonition,{type:"note",children:(0,s.jsx)(e.p,{children:"Congratulations!! Now we can build applications on Bitcoin and Lightning Network.\n...well, kind of. Al least we can start experimenting with it."})})]})}function h(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(a,{...n})}):a(n)}},9120:(n,e,i)=>{i.d(e,{A:()=>t});const t=i.p+"assets/images/bitcoin_core_macos_settings_open-c82d7659e648391858e46e7525148456.png"},9767:(n,e,i)=>{i.d(e,{A:()=>t});const t=i.p+"assets/images/bitcoin_core_setup-91e8b80ed97cf053337f01bc9110c5d4.png"}}]);